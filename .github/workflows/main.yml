name: widget-server-pipeline-ecr

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: build docker image
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v4

      - name: setup node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: install dependencies
        id: install-dependencies
        run: pnpm install

      - name: configure aws credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{vars.AWS_REGION}}

      - name: login to aws ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: setup buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v3

      - name: generate image tag
        id: generate-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: build image to scan
        id: build-image-scan
        uses: docker/build-push-action@v6
        with:
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          tags: ${{steps.login-ecr.outputs.registry}}/${{vars.ECR_REPOSITORY}}:scan

      - name: run trivy vulnerability scanner
        id: run-trivy
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: "${{steps.login-ecr.outputs.registry}}/${{vars.ECR_REPOSITORY}}:scan"
          format: "table"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH,MEDIUM,LOW"

      - name: build and push image to aws ecr
        id: build-and-push-image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          cache-from: type=gha
          tags: ${{steps.login-ecr.outputs.registry}}/${{vars.ECR_REPOSITORY}}:${{steps.generate-tag.outputs.sha}}

      - name: deploy to app runner
        id: deploy-app-runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: widget-server
          image: ${{steps.login-ecr.outputs.registry}}/${{vars.ECR_REPOSITORY}}:${{steps.generate-tag.outputs.sha}}
          region: ${{vars.AWS_REGION}}
          access-role-arn: ${{secrets.AWS_ACCESS_ROLE_ARN}}
          cpu: 1
          memory: 2
          port: 3333
          wait-for-service-stability-seconds: 300

      - name: check app runner
        run: echo "App Running... ${{steps.deploy-app-runner.outputs.service-url}}"
